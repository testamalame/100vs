<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Google.com" />
<Content type="html"><![CDATA[
<!DOCTYPE html>

<html>
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no"/>
<title>Aquapark Factory</title>


</head>
<body style="margin: 0px; overflow: hidden;" oncontextmenu="return false;">
<canvas id="unity-canvas" style="position: fixed; width: 100%; height: 100%; background: #353232">
</canvas>
<div id="progress-bar" style="position: absolute; left: 0%; right: 100%; top: 49%; bottom: 49%; background-color: white;"></div>
<script src="https://cdn.jsdelivr.net/gh/testamalame/100vs@main/Build/_Builds.loader.js"></script>
<script>
    const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent);

    const settings = {
      dataUrl: "https://cdn.jsdelivr.net/gh/testamalame/100vs@main/Build/301d273288aecfe22d6f0b94ddb63200.data.unityweb",
      frameworkUrl: "https://cdn.jsdelivr.net/gh/testamalame/100vs@main/Build/491de52a804f5ba2c16eb81ea1466052.js.unityweb",
      codeUrl: "https://cdn.jsdelivr.net/gh/testamalame/100vs@main/Build/3964e0a2cad6b3e47a25ca8444899eb7.wasm.unityweb",
      streamingAssetsUrl: "StreamingAssets",
      companyName: "defult",
      productName: "Aquapark Factory",
      productVersion: "1.0",
      matchWebGLToCanvasSize: true,
      devicePixelRatio: !isMobileDevice ? 2 : 1.6,
    };

    const progressBar = document.querySelector("#progress-bar");

    const unityStartLoadingTime = performance.now();
    createUnityInstance(document.querySelector("#unity-canvas"), settings, (progress) => {
      progressBar.style.right = 100 * (1 - progress) + "%";
    }).then((unityInstance) => {
      progressBar.style.display = "none";
      const unityEndLoadingTime = performance.now();
      unityInstance.Module.errorHandler = (errorMessage) => {
        ym(window.yandexMetricaCounterId, 'reachGoal', 'unityGameCrash', { gameCrashError: errorMessage });
      };
      ym(window.yandexMetricaCounterId,'reachGoal','unityStart', { unityLoadTime: (unityEndLoadingTime - unityStartLoadingTime) / 1000 });
    }).catch((errorMessage) => {
      ym(window.yandexMetricaCounterId, 'reachGoal', 'unityLoadingCrash', { loadingCrashError: errorMessage });
      alert(errorMessage);
    });
  </script>
</body>
</html>

]]></Content>
</Module>